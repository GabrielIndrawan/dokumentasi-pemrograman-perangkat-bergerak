pubspec.yaml
-------------------
dependencies:
  flutter:
    sdk: flutter
  sqflite: any
  path_provider: any
  path: any
  
  image_picker: ^1.0.8
  shared_preferences: ^2.2.3

assets:
    - assets/img/

database\db_helper.dart
--------------------------
//dbhelper ini dibuat untuk
//membuat database, membuat tabel, proses insert, read, update dan delete
import 'package:flutter_application_p9/model/product.dart';
import 'package:sqflite/sqflite.dart';
//import 'package:sqflite/sqlite_api.dart';
import 'package:path/path.dart';

class DbHelper {
  static final DbHelper _instance = DbHelper._internal();
  static Database? _database;
//inisialisasi beberapa variabel yang dibutuhkan
  final String tableName = 'produk';
  final String columnId = 'id';
  final String columnNama = 'nama';
  final String columnDeskripsi = 'deskripsi';
  final String columnHarga = 'harga';
  final String columnGambar = 'gambar';
  DbHelper._internal();
  factory DbHelper() => _instance;

//cek apakah database ada
  Future<Database?> get _db async {
    if (_database != null) {
      return _database;
    }
    _database = await _initDb();
    return _database;
  }

  Future<Database?> _initDb() async {
    String databasePath = await getDatabasesPath();
    String path = join(databasePath, 'product.db');
    return await openDatabase(path, version: 1, onCreate: _onCreate);
  }

//membuat tabel dan field-fieldnya
  Future<void> _onCreate(Database db, int version) async {
    var sql =
        "CREATE TABLE $tableName($columnId INTEGER PRIMARY KEY AUTOINCREMENT, "
        "$columnNama TEXT,"
        "$columnDeskripsi TEXT,"
        "$columnHarga TEXT,"
        "$columnGambar TEXT)";
    await db.execute(sql);
  }

//insert ke database
  Future<int?> saveProduk(Product product) async {
    var dbClient = await _db;
    return await dbClient!.insert(tableName, product.toMap());
  }

//read database
  Future<List?> getAllProduk() async {
    var dbClient = await _db;
    var result = await dbClient!.query(tableName, columns: [
      columnId,
      columnNama,
      columnDeskripsi,
      columnHarga,
      columnGambar
    ]);
    return result.toList();
  }

//update database
  Future<int?> updateProduk(Product product) async {
    var dbClient = await _db;
    return await dbClient!.update(tableName, product.toMap(),
        where: '$columnId = ?', whereArgs: [product.getId]);
  }

//hapus database
  Future<int?> deleteProduk(int id) async {
    var dbClient = await _db;
    return await dbClient!
        .delete(tableName, where: '$columnId = ?', whereArgs: [id]);
  }
}

model\product.dart
-------------------
class Product {
  int _id = 0;
  String _nama = "";
  String _deskripsi = "";
  String _harga = "";
  String _gambar = "";

// konstruktor versi 1
  Product(this._nama, this._deskripsi, this._harga, this._gambar);
// konstruktor versi 2: konversi dari Map ke Product
  Product.fromMap(Map<String, dynamic> map) {
    _id = map['id'];
    _nama = map['nama'];
    _deskripsi = map['deskripsi'];
    _harga = map['harga'];
    _gambar = map['gambar'];
  }

//getter dan setter (mengambil dan mengisi data kedalam object)

// getter
  int get getId => _id;
  String get getNama => _nama;
  String get getDeskripsi => _deskripsi;
  String get getHarga => _harga;
  String get getGambar => _gambar;
// setter

  set setNama(String value) {
    _nama = value;
  }

  set setDeskripsi(String value) {
    _deskripsi = value;
  }

  set setHarga(String value) {
    _harga = value;
  }

  set setGambar(String value) {
    _gambar = value;
  }

// konversi dari Product ke Map
  Map<String, dynamic> toMap() {
    Map<String, dynamic> map = <String, dynamic>{};
// map['id'] = _id;
    map['nama'] = _nama;
    map['deskripsi'] = _deskripsi;
    map['harga'] = _harga;
    map['gambar'] = _gambar;
    return map;
  }
}

splash.dart
-----------------
import 'dart:async';
import 'package:flutter/material.dart';
import 'login.dart';

class SplashScreen extends StatefulWidget {
  const SplashScreen({Key? key}) : super(key: key);
  @override
  State<SplashScreen> createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> {
  startSplashScreen() async {
    var duration = const Duration(seconds: 5);
    return Timer(duration, () {
      Navigator.pushReplacement(
          context, MaterialPageRoute(builder: (context) => LoginScreen()));
    });
  }

  @override
  void initState() {
    super.initState();
    startSplashScreen();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Center(
            child: Image.asset(
              "assets/img/logo.png",
              width: 200.0,
              height: 100.0,
              fit: BoxFit.contain,
            ),
          ),
          const SizedBox(
            height: 24.0,
          ),
          const Text(
            "Selamat Datang di \nGhinaj Shop",
            style: TextStyle(
              color: Colors.green,
              fontWeight: FontWeight.bold,
              fontSize: 35.0,
            ),
          ),
        ],
      ),
    );
  }
}

login.dart
--------------------
//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_application_p9/register.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'home.dart';
//import 'main.dart';

class LoginScreen extends StatelessWidget {
  LoginScreen({super.key});
  TextEditingController usernameCont = TextEditingController();
  TextEditingController passCont = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: SafeArea(
            child: Center(
      child: SingleChildScrollView(
          child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          SizedBox(
            height: 30,
          ),
          Container(
            width: 150,
            height: 150,
            child: Image.asset('assets/img/logo.png'),
          ),
          Text(
            'Halaman Login',
            style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: Colors.black54),
          ),
          Padding(
            padding: EdgeInsets.symmetric(horizontal: 30),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                SizedBox(
                  height: 30,
                ),
                TextField(
                  decoration: InputDecoration(
                      label: Text(
                    'Username',
                    style: TextStyle(fontSize: 14),
                  )),
                  controller: usernameCont,
                ),
                SizedBox(
                  height: 10,
                ),
                TextField(
                  obscureText: true,
                  decoration: InputDecoration(
                      label: Text(
                    'Password',
                    style: TextStyle(fontSize: 14),
                  )),
                  controller: passCont,
                ),
              ],
            ),
          ),
          SizedBox(
            height: 80,
          ),
          ElevatedButton(
              style: ButtonStyle(
                  backgroundColor: MaterialStatePropertyAll(Colors.green)),
              onPressed: () async {
                SharedPreferences prefs = await SharedPreferences.getInstance();
                if (usernameCont.text == prefs.getString("nickname") &&
                    passCont.text == prefs.getString("password")) {
                  Navigator.push(context, MaterialPageRoute(builder: (context) {
                    return HomeScreen();
                  }));
                }
              },
              child: Text(
                'Login',
                style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Colors.white),
              )),
          SizedBox(
            height: 30,
          ),
          TextButton(
              onPressed: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return RegisterScreen();
                }));
              },
              child: Text('Register ?'))
        ],
      )),
    )));
  }
}

register.dart
-----------------------
//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

import 'login.dart';

class RegisterScreen extends StatefulWidget {
  const RegisterScreen({Key? key}) : super(key: key);
  @override
  State<RegisterScreen> createState() => _RegisterScreenState();
}

class _RegisterScreenState extends State<RegisterScreen> {
  TextEditingController fullNameController = TextEditingController();
  TextEditingController nickNameController = TextEditingController();
  TextEditingController passwordController = TextEditingController();
  String? fullName = "";
  String? nickName = "";
  String? password = "";

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Register')),
      body: ListView(
        padding: const EdgeInsets.all(8.0),
        children: [
          TextField(
              controller: fullNameController,
              decoration: InputDecoration(
                  labelText: "Nama Lengkap",
                  border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0)))),

          const Padding(padding: EdgeInsets.only(top: 4)),
          TextField(
              controller: nickNameController,
              decoration: InputDecoration(
                  labelText: "Username",
                  border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0)))),

          const Padding(padding: EdgeInsets.only(top: 4)),
          TextField(
              controller: passwordController,
              obscureText: true,
              decoration: InputDecoration(
                  labelText: "Password",
                  border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0)))),

// button untuk menyimpan email dan password ke dalam Shared Preferences melalui method
// setIntoSharedPreferences()
          ElevatedButton(
            child: const Text("Daftar"),
            onPressed: () {
              setIntoSharedPreferences();
            },
          ),

          const Padding(padding: EdgeInsets.only(top: 8)),
          Text(
            "Your Name : $fullName",
            style: const TextStyle(fontSize: 20),
          ),
          Text(
            "Your Username : $nickName",
            style: const TextStyle(fontSize: 20),
          ),
// Text(
// "Your Password : $password",
// style: const TextStyle(fontSize: 20),
// ),

// Button yang berfungsi memanggil method getFromSharedPreferences() untuk menampilkan
// Email dan Password pada Text Widget
          ElevatedButton(
            child: const Text("Cek"),
            onPressed: () {
              getFromSharedPreferences();
            },
          ),
          TextButton(
            child: const Text("Login Sekarang"),
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) {
                return LoginScreen();
              }));
            },
          ),
        ],
      ),
    );
  }

// method ini berfungsi untuk memasukkan data ke dalam SharedPreferences
  void setIntoSharedPreferences() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();

    await prefs.setString("fullname", fullNameController.text);
    await prefs.setString("nickname", nickNameController.text);
    await prefs.setString("password", passwordController.text);
  }

// Method ini berfungsi untuk mengambil data Email dan Password dari SharedPreferences
// kemudian dimasukkan ke variable email dan password
  void getFromSharedPreferences() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();

    setState(() {
      fullName = prefs.getString("fullname");
      nickName = prefs.getString("nickname");
      password = prefs.getString("password");
    });
  }
}

home.dart
----------------------
import 'dart:convert';

//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_application_p9/list_produk.dart';
import 'package:flutter_application_p9/payment.dart';
//import 'package:shared_preferences/shared_preferences.dart';

//import 'database/db_helper.dart';
import 'model/product.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

List<Product> listProduct = [];
List<Product> listProductOrder = [];

class _HomeScreenState extends State<HomeScreen> {
  int harga = 0;

  Future<void> _getAllProduk() async {
//list menampung data dari database
    var list = await db.getAllProduk();

//ada perubahanan state
    setState(() {
//hapus data pada listProduct
      listProduct.clear();
//lakukan perulangan pada variabel list
      for (var produk in list!) {
//masukan data ke listProduct
        listProduct.add(Product.fromMap(produk));
      }
    });
    print(listProduct);
    setState(() {});
  }

  void cekHarga() {
    harga = 0;
    for (int i = 0; i < listProductOrder.length; i++) {
      harga += int.parse(listProductOrder[i].getHarga);
    }
  }

  Widget gridContent(
      String nama, String desc, int harga, String img, int index) {
    return Container(
      margin: EdgeInsets.all(5),
      decoration: BoxDecoration(
          border: Border.all(color: Colors.grey),
          borderRadius: BorderRadius.circular(30)),
      child: Column(
        children: [
          SizedBox(
            height: 10,
          ),
          GestureDetector(
              onTap: () {
                listProductOrder.add(listProduct[index]);
                cekHarga();
                setState(() {});
              },
              child: Container(
                width: 100,
                height: 100,
                child: Image.memory(
                  Base64Decoder().convert(img),
                  fit: BoxFit.fill,
                ),
              )),
          SizedBox(
            height: 5,
          ),
          GestureDetector(
            onTap: () {
              showDialog(
                  context: context,
                  builder: (context) {
                    return AlertDialog(
                        title: Text('Detail Product'),
                        content: Container(height: 300, child: Text(desc)));
                  });
            },
            child: Text(
              nama,
              style:
                  TextStyle(fontWeight: FontWeight.bold, color: Colors.black54),
            ),
          ),
          Text(
            'Rp ${harga.toString()}',
            style:
                TextStyle(fontWeight: FontWeight.bold, color: Colors.black54),
          ),
        ],
      ),
    );
  }

  @override
  void initState() {
// TODO: implement initState
    _getAllProduk();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    if (listProduct.isEmpty) {
// dummyProduct();
    }
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.green,
          automaticallyImplyLeading: false,
          actions: [
            IconButton(
                onPressed: () {
                  showDialog(
                      context: context,
                      builder: (context) {
                        return AlertDialog(
                          title: Text('Call Center'),
                          content: Container(
                              height: 300,
                              child: Text('Hubungi Nomor : 081256737865')),
                        );
                      });
                },
                icon: Icon(
                  Icons.call,
                  color: Colors.white,
                )),
            IconButton(
                onPressed: () {
                  showDialog(
                      context: context,
                      builder: (context) {
                        return AlertDialog(
                          title: Text('Layanan Pesan'),
                          content: Container(
                              height: 300,
                              child: Text('Pesan pada email kami')),
                        );
                      });
                },
                icon: Icon(
                  Icons.message,
                  color: Colors.white,
                )),
            IconButton(
                onPressed: () {
                  showDialog(
                      context: context,
                      builder: (context) {
                        return AlertDialog(
                          title: Text('Lokasi Kami'),
                          content: Container(
                              height: 300,
                              child: Text('Lokasi Kami di Semarang Tengah')),
                        );
                      });
                },
                icon: Icon(
                  Icons.location_on,
                  color: Colors.white,
                )),
            IconButton(
                onPressed: () {
                  showDialog(
                      context: context,
                      builder: (context) {
                        return AlertDialog(
                          title: Text('Pengaturan Akun'),
                          content: Container(
                              height: 300,
                              child: Column(
                                children: [
                                  GestureDetector(
                                    onTap: () {
                                      Navigator.push(context, MaterialPageRoute(
                                          builder: (BuildContext context) {
                                        return ListProdukPage();
                                      }));
                                    },
                                    child: ListTile(
                                      title: Text('Halaman Produk'),
                                      leading: Icon(Icons.trolley),
                                    ),
                                  ),
                                  ListTile(
                                    title: Text('Pengaturan Akun'),
                                    leading: Icon(Icons.person),
                                  ),
                                ],
                              )),
                        );
                      });
                },
                icon: Icon(
                  Icons.change_circle_outlined,
                  color: Colors.white,
                )),
            IconButton(
                onPressed: () {
                  showDialog(
                      context: context,
                      builder: (context) {
                        return AlertDialog(
                          title: Text('Ubah Password'),
                          content: Container(
                              height: 300, child: Text('Ubah Password anda')),
                        );
                      });
                },
                icon: Icon(
                  Icons.lock,
                  color: Colors.white,
                ))
          ],
          title: Text(
            'Daftar Produk',
            style: TextStyle(
                fontWeight: FontWeight.bold, color: Colors.white, fontSize: 18),
          ),
        ),
        body: SafeArea(
            child: Container(
          height: 0.95 * MediaQuery.of(context).size.height,
          child: SingleChildScrollView(
            child: Column(
              children: [
                Container(
                  height: 560,
                  child: GridView(
                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                          crossAxisCount: 2, crossAxisSpacing: 20),
                      children: List.generate(
                          listProduct.length,
                          (index) => gridContent(
                              listProduct[index].getNama,
                              listProduct[index].getDeskripsi,
                              int.parse(listProduct[index].getHarga),
                              listProduct[index].getGambar,
                              index))),
                ),
                SizedBox(
                  height: 5,
                ),
                Padding(
                  padding: EdgeInsets.only(left: 5),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      SizedBox(
                        width: 120,
                        child: Column(
                          children: [
                            Text('Total Pesananku'),
                            SizedBox(
                              height: 5,
                            ),
                            GestureDetector(
                              onTap: () {
                                Navigator.push(context,
                                    MaterialPageRoute(builder: (context) {
                                  return Payment();
                                }));
                              },
                              child: Text(
                                'Rp ${harga.toString()}',
                                style: TextStyle(fontSize: 18),
                              ),
                            )
                          ],
                        ),
                      ),
                      IconButton(
                          onPressed: () {
                            showDialog(
                                context: context,
                                builder: (context) {
                                  return AlertDialog(
                                    title: Text('Detail Product Transaksi'),
                                    content: Container(
                                        height: 300,
                                        child: SingleChildScrollView(
                                          child: Column(
                                            children: List.generate(
                                                listProductOrder.length,
                                                (index) => ListTile(
                                                      trailing: IconButton(
                                                          onPressed: () {
                                                            listProductOrder
                                                                .removeAt(
                                                                    index);
                                                            Navigator.pop(
                                                                context);
                                                            cekHarga();
                                                            setState(() {});
                                                          },
                                                          icon: Icon(
                                                              Icons.close)),
                                                      title: Text(
                                                          listProductOrder[
                                                                  index]
                                                              .getNama),
                                                      subtitle: Text(
                                                          listProductOrder[
                                                                  index]
                                                              .getHarga
                                                              .toString()),
                                                    )),
                                          ),
                                        )),
                                  );
                                });
                          },
                          icon: Icon(
                            Icons.menu_book_sharp,
                            size: 35,
                            color: Colors.green[900],
                          )),
                      IconButton(
                          onPressed: () {
                            Navigator.push(context,
                                MaterialPageRoute(builder: (context) {
                              return Payment();
                            }));
                          },
                          icon: Icon(
                            Icons.payment,
                            size: 35,
                            color: Colors.green[900],
                          ))
                    ],
                  ),
                ),
              ],
            ),
          ),
        )));
  }
}

list_produk.dart
-----------------------
import 'dart:convert';

//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_application_p9/form_product.dart';
import 'package:flutter_application_p9/model/product.dart';

import 'database/db_helper.dart';

DbHelper db = DbHelper();

class ListProdukPage extends StatefulWidget {
  const ListProdukPage({Key? key}) : super(key: key);
  @override
  State<ListProdukPage> createState() => _ListProdukPageState();
}

class _ListProdukPageState extends State<ListProdukPage> {
  List<Product> listProduk = [];

  @override
  void initState() {
//menjalankan fungsi getallProduk saat pertama kali dimuat
    _getAllProduk();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Center(
          child: Text("Produk App"),
        ),
      ),
      body: ListView.builder(
          itemCount: listProduk.length,
          itemBuilder: (context, index) {
            Product produk = listProduk[index];
            return Padding(
              padding: const EdgeInsets.only(top: 20),
              child: ListTile(
                leading:
                    Image.memory(Base64Decoder().convert(produk.getGambar)),
                title: Text(produk.getNama),
                subtitle: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Padding(
                      padding: const EdgeInsets.only(
                        top: 8,
                      ),
                      child: Text("Deskripsi: ${produk.getDeskripsi}"),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(
                        top: 8,
                      ),
                      child: Text("Harga: ${produk.getHarga}"),
                    ),
                  ],
                ),
                trailing: FittedBox(
                  fit: BoxFit.fill,
                  child: Row(
                    children: [
// button edit
                      IconButton(
                          onPressed: () {
                            _openFormEdit(produk);
                          },
                          icon: const Icon(Icons.edit)),
// button hapus
                      IconButton(
                        icon: const Icon(Icons.delete),
                        onPressed: () {
//membuat dialog konfirmasi hapus
                          AlertDialog hapus = AlertDialog(
                            title: const Text("Information"),
                            content: Container(
                              height: 100,
                              child: Column(
                                children: [
                                  Text(
                                      "Yakin ingin Menghapus Data ${produk.getNama}")
                                ],
                              ),
                            ),
//terdapat 2 button.
//jika ya maka jalankan _deleteProduk() dan tutup dialog
//jika tidak maka tutup dialog
                            actions: [
                              TextButton(
                                  onPressed: () {
                                    _deleteProduk(produk, index);
                                    Navigator.pop(context);
                                  },
                                  child: const Text("Ya")),
                              TextButton(
                                child: const Text('Tidak'),
                                onPressed: () {
                                  Navigator.pop(context);
                                },
                              ),
                            ],
                          );
                          showDialog(
                              context: context, builder: (context) => hapus);
                        },
                      )
                    ],
                  ),
                ),
              ),
            );
          }),
//membuat button mengapung di bagian bawah kanan layar
      floatingActionButton: FloatingActionButton(
        child: const Icon(Icons.add),
        onPressed: () {
          _openFormCreate();
        },
      ),
    );
  }

//mengambil semua data Produk
  Future<void> _getAllProduk() async {
//list menampung data dari database
    var list = await db.getAllProduk();
//ada perubahanan state
    setState(() {
//hapus data pada listProduk
      listProduk.clear();
//lakukan perulangan pada variabel list
      for (var produk in list!) {
//masukan data ke listProduk
        listProduk.add(Product.fromMap(produk));
      }
    });
    print(listProduk);
  }

//menghapus data Produk
  Future<void> _deleteProduk(Product produk, int position) async {
    await db.deleteProduk(produk.getId);
    setState(() {
      listProduk.removeAt(position);
    });
  }

// membuka halaman tambah Produk
  Future<void> _openFormCreate() async {
    var result = await Navigator.push(
        context, MaterialPageRoute(builder: (context) => FormProduk()));
    if (result == 'save') {
      await _getAllProduk();
    }
  }

//membuka halaman edit Produk
  Future<void> _openFormEdit(Product produk) async {
    var result = await Navigator.push(context,
        MaterialPageRoute(builder: (context) => FormProduk(produk: produk)));
    if (result == 'update') {
      await _getAllProduk();
    }
  }
}

form_product.dart
---------------------
import 'dart:convert';
import 'dart:io';

//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:image_picker/image_picker.dart';

import 'database/db_helper.dart';
import 'model/product.dart';

class FormProduk extends StatefulWidget {
  final Product? produk;
  const FormProduk({super.key, this.produk});
  @override
  State<FormProduk> createState() => _FormProdukState();
}

class _FormProdukState extends State<FormProduk> {
  DbHelper db = DbHelper();
  TextEditingController? nama;
  TextEditingController? deskripsi;
  TextEditingController? harga;
// TextEditingController? gambar;

  final ImagePicker imgpicker = ImagePicker();
  String imagepath = "";
  String imageBase64 = "";
  openImage() async {
    try {
      var pickedFile = await imgpicker.pickImage(source: ImageSource.gallery);
//you can use ImageCourse.camera for Camera capture
      if (pickedFile != null) {
        imagepath = pickedFile.path;
        print(imagepath);
//output /data/user/0/com.example.testapp/cache/image_picker7973898508152261600.jpg

        File imagefile = File(imagepath); //convert Path to File
        Uint8List imagebytes = await imagefile.readAsBytes();
//convert to bytes
        String base64string = base64.encode(
            imagebytes); //convert bytes to base64 string print(base64string);
/* Output:
/9j/4Q0nRXhpZgAATU0AKgAAAAgAFAIgAAQAAAABAAAAAAEAAAQAAAABAAAJ3
wIhAAQAAAABAAAAAAEBAAQAAAABAAAJ5gIiAAQAAAABAAAAAAIjAAQAAAABAAA
AAAIkAAQAAAABAAAAAAIlAAIAAAAgAAAA/gEoAA ... long string output
*/

//Uint8List decodedbytes = base64.decode(base64string);

//decode base64 stirng to bytes

        setState(() {
          imageBase64 = base64string;
        });
      } else {
        print("No image is selected.");
      }
    } catch (e) {
      print("error while picking file.");
    }
  }

  @override
  void initState() {
    nama = TextEditingController(
        text: widget.produk == null ? '' : widget.produk!.getNama);
    deskripsi = TextEditingController(
        text: widget.produk == null ? '' : widget.produk!.getDeskripsi);
    harga = TextEditingController(
        text: widget.produk == null ? '' : widget.produk!.getHarga);

// gambar = TextEditingController(
// text: widget.produk == null ? '' : widget.produk!.getGambar);
    imageBase64 = widget.produk == null ? '' : widget.produk!.getGambar;
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Form Product'),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          Padding(
            padding: const EdgeInsets.only(
              top: 20,
            ),
            child: TextField(
              controller: nama,
              decoration: InputDecoration(
                  labelText: 'Nama Barang',
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                  )),
            ),
          ),
          Padding(
            padding: const EdgeInsets.only(
              top: 20,
            ),
            child: TextField(
              controller: deskripsi,
              decoration: InputDecoration(
                  labelText: 'Deskripsi',
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                  )),
            ),
          ),
          Padding(
            padding: const EdgeInsets.only(
              top: 20,
            ),
            child: TextField(
              controller: harga,
              decoration: InputDecoration(
                  labelText: 'Harga',
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                  )),
            ),
          ),
          Padding(
            padding: const EdgeInsets.only(
              top: 20,
            ),
            child: Container(
                alignment: Alignment.center,
                padding: EdgeInsets.all(20),
                child: Row(children: [
// imagepath != ""?Image.file(File(imagepath)):

// Container(
// child: Text("No Image selected."),
// ),
                  SizedBox(
                    width: 0.6 * MediaQuery.of(context).size.width,
                    child: imageBase64 != ''
                        ? Container(
                            child: Image.memory(
                                Base64Decoder().convert(imageBase64)),
                          )
                        : Container(
                            child: Text(
                              "No Image selected.",
                              style: TextStyle(color: Colors.green[900]),
                            ),
                          ),
                  ),

//open button ----------------
                  IconButton(
                      onPressed: () async {
                        await openImage();
                        setState(() {});
                      },
                      icon: Icon(
                        Icons.upload,
                        color: Colors.green[900],
                      ))
                ])),
          ),
          Padding(
            padding: const EdgeInsets.only(top: 20),
            child: ElevatedButton(
              style: ButtonStyle(
                  backgroundColor: MaterialStatePropertyAll(Colors.green[900])),
              child: (widget.produk == null)
                  ? const Text(
                      'Add',
                      style: TextStyle(color: Colors.white),
                    )
                  : const Text(
                      'Update',
                      style: TextStyle(color: Colors.white),
                    ),
              onPressed: () {
                upsertproduk();
              },
            ),
          )
        ],
      ),
    );
  }

  Future<void> upsertproduk() async {
    if (widget.produk != null) {
//update
      await db.updateProduk(Product.fromMap({
        'id': widget.produk!.getId,
        'nama': nama!.text,
        'deskripsi': deskripsi!.text,
        'harga': harga!.text,
        'gambar': imageBase64
      }));
      Navigator.pop(context, 'update');
    } else {
//insert
      await db.saveProduk(
          Product(nama!.text, deskripsi!.text, harga!.text, imageBase64));
      Navigator.pop(context, 'save');
    }
  }
}

payment.dart
-----------------------
//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

import 'home.dart';
import 'main.dart';

class Payment extends StatefulWidget {
  const Payment({super.key});

  @override
  State<Payment> createState() => _PaymentState();
}

class _PaymentState extends State<Payment> {
  String _username = '';
  int harga = 0;
  @override
  Widget build(BuildContext context) {
    void cekHarga() {
      harga = 0;
      for (int i = 0; i < listProductOrder.length; i++) {
        harga += int.parse(listProductOrder[i].getHarga);
      }
    }

    @override
    void initState() {
      super.initState();
    }

    setState(() {
      _username = sp!.getString('username') ?? "";
      cekHarga();
    });
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.green,
        title: Text(
          'Detail Pembayaran',
          style: TextStyle(
              fontWeight: FontWeight.bold, color: Colors.white, fontSize: 18),
        ),
      ),
      body: SafeArea(
          child: SingleChildScrollView(
              child: Column(
        children: [
          SizedBox(
            height: 10,
          ),
          Text(
            'Pembelian atas nama',
            style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.w400,
                color: Colors.black54),
          ),
          SizedBox(
            height: 5,
          ),
          Text(
            _username,
            style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: Colors.black54),
          ),
          SizedBox(
            height: 10,
          ),
          Column(
            children: List.generate(
                listProductOrder.length,
                (index) => ListTile(
                      title: Text(
                        listProductOrder[index].getNama,
                        style: TextStyle(fontSize: 14),
                      ),
                      trailing: Text(
                        listProductOrder[index].getHarga.toString(),
                        style: TextStyle(fontSize: 14),
                      ),
                    )),
          ),
          SizedBox(
            height: 30,
          ),
          Text(
            'Total Bayar ',
            style: TextStyle(
                fontSize: 14, fontWeight: FontWeight.w400, color: Colors.black),
          ),
          SizedBox(
            height: 10,
          ),
          Text(
            'Rp $harga',
            style: TextStyle(
                fontSize: 24, fontWeight: FontWeight.bold, color: Colors.black),
          ),
          SizedBox(
            height: 30,
          ),
          ElevatedButton(
              style: ButtonStyle(
                  backgroundColor: MaterialStatePropertyAll(Colors.green[900])),
              onPressed: () {},
              child: Text(
                'Bayar Barang',
                style:
                    TextStyle(fontWeight: FontWeight.bold, color: Colors.white),
              ))
        ],
      ))),
    );
  }
}

main.dart
------------
import 'package:flutter/material.dart';
import 'package:flutter_application_p9/splash.dart';
import 'package:shared_preferences/shared_preferences.dart';

SharedPreferences? sp;

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  sp = await SharedPreferences.getInstance();
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

// This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NAJA UTS',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const SplashScreen(),
    );
  }
}